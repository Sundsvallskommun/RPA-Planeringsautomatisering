<Activity mc:Ignorable="sap sap2010" x:Class="H채mtaGammalData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FilePath" Type="InArgument(x:String)" />
    <x:Property Name="out_dt_Bevakningar_OldRowsFromExcel" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_Journalanteckningar_OldRowsFromExcel" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_Utredning_OldRowsFromExcel" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_dt_Aktualiseringar_OldRowsFromExcel" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_FileName" Type="InArgument(x:String)" />
    <x:Property Name="in_OrgFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_TempFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="out_OldRowsExists_Aktualiseringar" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_OldRowsExists_Bevakningar" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_OldRowsExists_Journalanteckningar" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_OldRowsExists_Utredning" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1623,2541</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>H채mtaGammalData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>Procapita_Plus.Genreal</x:String>
      <x:String>Procapita_Plus.Actions_In_Search_Tool</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>Procapita Plus</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="H채mtar datatabeller fr책n excelfilen och sparar de i fyra olika tabeller.&#xA;Samt sorterar tabellernas kolumner i alfabetisk ordning samt tar bort radbryten" DisplayName="Get Data From Excel" sap:VirtualizedContainerService.HintSize="558,2476" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Aktualiseringar" sap:VirtualizedContainerService.HintSize="496,578" sap2010:WorkflowViewState.IdRef="Sequence_25">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dt_TempAkt" />
        <Variable x:TypeArguments="x:String" Name="NewFolderPath" />
        <Variable x:TypeArguments="sd:DataTable" Name="dt_Kvitterade" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch Aktualiseringar" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:RetryScope DisplayName="Retry Scope Aktualiseringar" sap:VirtualizedContainerService.HintSize="231,52" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_dt_Aktualiseringar_OldRowsFromExcel]" DisplayName="Private: Read Range Workbook Aktualiseringar" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ReadRange_18" SheetName="Aktualiseringar" WorkbookPath="[in_FilePath]" />
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean">
                <ui:CheckTrue ErrorMessage="{x:Null}" DisplayName="Check True Aktualiseringar" Expression="[out_dt_Aktualiseringar_OldRowsFromExcel IsNot Nothing]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="CheckTrue_6" />
              </ActivityFunc>
            </ui:RetryScope.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:RetryScope>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[&quot;Could not get data tabel for sheet 'Aktualiseringar'. &quot; + exception.Message]" />
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <If Condition="[out_dt_Aktualiseringar_OldRowsFromExcel.RowCount &gt; 0]" DisplayName="If out_dt_Aktualiseringar_OldRowsFromExcel.RowCount &gt; 0" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="If_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="395,232" sap2010:WorkflowViewState.IdRef="Sequence_31">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Tar bort radbryt" DisplayName="ManipulateDtFromExcel Aktualiseringar" sap:VirtualizedContainerService.HintSize="353,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Excel\ManipulateDtFromExcel.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_AllRows">[out_dt_Aktualiseringar_OldRowsFromExcel]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_32" />
        </If.Else>
      </If>
      <ui:FilterDataTable DataTable="[out_dt_Aktualiseringar_OldRowsFromExcel]" DisplayName="Filter Data Table out_dt_Aktualiseringar_OldRowsFromExcel" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dt_Kvitterade]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Kvitteringsstatus"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["Kvitterat"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <Assign DisplayName="Assign out_OldRowsExists_Aktualiseringar" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[out_OldRowsExists_Aktualiseringar]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[If(dt_Kvitterade.RowCount &gt; 0, True, False)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="Bevakningar" sap:VirtualizedContainerService.HintSize="496,578" sap2010:WorkflowViewState.IdRef="Sequence_17">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="NewFileName" />
        <Variable x:TypeArguments="x:String" Name="NewFolderPath" />
        <Variable x:TypeArguments="sd:DataTable" Name="dt_Kvitterade" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch Bevakningar" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="TryCatch_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:RetryScope DisplayName="Retry Scope Bevakningar" sap:VirtualizedContainerService.HintSize="376,336" sap2010:WorkflowViewState.IdRef="RetryScope_5" NumberOfRetries="3" RetryInterval="00:00:03">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_dt_Bevakningar_OldRowsFromExcel]" DisplayName="Private: Read Range Workbook Bevakningar" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ReadRange_19" SheetName="Bevakningar" WorkbookPath="[in_FilePath]" />
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean">
                <ui:CheckTrue DisplayName="Check True Bevakningar" ErrorMessage="Gick inte att h채mta tabell f철r Bevakningar" Expression="[out_dt_Bevakningar_OldRowsFromExcel IsNot Nothing]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="CheckTrue_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CheckTrue>
              </ActivityFunc>
            </ui:RetryScope.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:RetryScope>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Warn" Message="[&quot;Could not get data tabel for sheet 'Bevakning'. &quot; + exception.Message]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <If Condition="[out_dt_Bevakningar_OldRowsFromExcel.RowCount &gt; 0]" DisplayName="If out_dt_Bevakningar_OldRowsFromExcel.RowCount &gt; 0" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="If_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="476,581" sap2010:WorkflowViewState.IdRef="Sequence_29">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:List(x:String)" Name="ColumnListOrder" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Tar bort radbryt, sorterar kolumnerna och delar upp exceltabellen i 'nya' och 'gamla' bevaknigar" DisplayName="ManipulateDtFromExcel Bevakningar" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Excel\ManipulateDtFromExcel.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_AllRows">[out_dt_Bevakningar_OldRowsFromExcel]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <Assign DisplayName="Column List order" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[ColumnListOrder]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String) From {"Datum", "Objekt", "Namn", "Personnr", "Status", "Typ av", "Kvitteringsstatus", "Prioritet", "Kommentarer"}]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Sorterar tabellens kolumner i samma ordning som excelfilen." Code="' Skapa en ny DataTable f철r att h책lla de sorterade kolumnerna&#xA;Dim sortedTable As New DataTable()&#xA;&#xA;' L채gg till kolumnerna i den angivna ordningen&#xA;For Each columnName In desiredColumnOrder&#xA;    If in_dt.Columns.Contains(columnName) Then&#xA;        sortedTable.Columns.Add(columnName, in_dt.Columns(columnName).DataType)&#xA;    End If&#xA;Next&#xA;&#xA;' Kopiera rader fr책n originaltabellen till den sorterade tabellen&#xA;For Each row As DataRow In in_dt.Rows&#xA;    Dim newRow As DataRow = sortedTable.NewRow()&#xA;    For Each columnName In desiredColumnOrder&#xA;        If in_dt.Columns.Contains(columnName) Then&#xA;            newRow(columnName) = row(columnName)&#xA;        End If&#xA;    Next&#xA;    sortedTable.Rows.Add(newRow)&#xA;Next&#xA;&#xA;' Tilldela den sorterade tabellen tillbaka till in_dt&#xA;out_dt  = sortedTable&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="434,207" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="scg:List(x:String)" x:Key="desiredColumnOrder ">[ColumnListOrder]</InArgument>
                <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt">[out_dt_Bevakningar_OldRowsFromExcel]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt">[out_dt_Bevakningar_OldRowsFromExcel]</OutArgument>
              </ui:InvokeCode.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeCode>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30" />
        </If.Else>
      </If>
      <ui:FilterDataTable DataTable="[out_dt_Bevakningar_OldRowsFromExcel]" DisplayName="Filter Data Table dt_Kvitterade Bevakning" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_Kvitterade]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Kvitteringsstatus"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["Kvitterat"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <Assign DisplayName="Assign out_OldRowsExists_Bevakningar" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[out_OldRowsExists_Bevakningar]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[If(dt_Kvitterade.RowCount &gt; 0, True, False)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="MedicalRecords" sap:VirtualizedContainerService.HintSize="496,578" sap2010:WorkflowViewState.IdRef="Sequence_22">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dt_Kvitterade" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch Medical Records" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="TryCatch_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:RetryScope DisplayName="Retry Scope Medical Records" sap:VirtualizedContainerService.HintSize="376,336" sap2010:WorkflowViewState.IdRef="RetryScope_10" NumberOfRetries="3" RetryInterval="00:00:03">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_dt_Journalanteckningar_OldRowsFromExcel]" DisplayName="Private: Read Range Workbook Journalanteckningar" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ReadRange_20" SheetName="Journalanteckningar" WorkbookPath="[in_FilePath]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ReadRange>
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean">
                <ui:CheckTrue DisplayName="Check True Medical Records" ErrorMessage="Gick inte att h채mta tabell f철r Journalantecknigar." Expression="[out_dt_Journalanteckningar_OldRowsFromExcel IsNot Nothing]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="CheckTrue_3" />
              </ActivityFunc>
            </ui:RetryScope.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:RetryScope>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[&quot;Could not get data tabel for sheet 'Journalanteckningar'. &quot; + exception.Message]" />
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <If Condition="[out_dt_Journalanteckningar_OldRowsFromExcel.RowCount &gt; 0]" DisplayName="If out_dt_Journalanteckningar_OldRowsFromExcel.RowCount &gt; 0" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="300,212" sap2010:WorkflowViewState.IdRef="Sequence_27">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Tar bort radbryt, sorterar kolumnerna och delar upp exceltabellen i 'nya' och 'gamla' journalanteckningar" DisplayName="ManipulateDtFromExcel Medrec" sap:VirtualizedContainerService.HintSize="258,124" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Excel\ManipulateDtFromExcel.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_AllRows">[out_dt_Journalanteckningar_OldRowsFromExcel]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28" />
        </If.Else>
      </If>
      <ui:FilterDataTable DataTable="[out_dt_Journalanteckningar_OldRowsFromExcel]" DisplayName="Filter Data Table out_dt_Journalanteckningar_OldRowsFromExcel" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[dt_Kvitterade]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Kvitteringsstatus"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["Kvitterat"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <Assign DisplayName="Assign out_OldRowsExists_Journalanteckningar" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[out_OldRowsExists_Journalanteckningar]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[If(dt_Kvitterade.RowCount &gt; 0, True, False)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="Utredning" sap:VirtualizedContainerService.HintSize="496,469" sap2010:WorkflowViewState.IdRef="Sequence_23">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dt_Kvitterade" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch Utrdning" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="TryCatch_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:RetryScope DisplayName="Retry Scope Utrdning" sap:VirtualizedContainerService.HintSize="376,336" sap2010:WorkflowViewState.IdRef="RetryScope_11" NumberOfRetries="3" RetryInterval="00:00:03">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_dt_Utredning_OldRowsFromExcel]" DisplayName="Private: Read Range Workbook Utredning" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ReadRange_15" SheetName="Utredning" WorkbookPath="[in_FilePath]" />
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean">
                <ui:CheckTrue ErrorMessage="{x:Null}" DisplayName="Check True Utrdning" Expression="[out_dt_Utredning_OldRowsFromExcel IsNot Nothing]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="CheckTrue_4" />
              </ActivityFunc>
            </ui:RetryScope.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:RetryScope>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Error" Message="[&quot;Could not get data tabel for sheet 'Utredning'. &quot; + exception.Message]" />
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <If Condition="[out_dt_Utredning_OldRowsFromExcel.RowCount &gt; 0]" DisplayName="If out_dt_Utredning_OldRowsFromExcel" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="If_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="395,243" sap2010:WorkflowViewState.IdRef="Sequence_33">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Tar bort radbryt, sorterar kolumnerna och delar upp exceltabellen i 'nya' och 'gamla' utredningar" DisplayName="Excel\ManipulateDtFromExcel Utredning" sap:VirtualizedContainerService.HintSize="353,155" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Excel\ManipulateDtFromExcel.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_AllRows">[out_dt_Utredning_OldRowsFromExcel]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_34" />
        </If.Else>
      </If>
      <ui:FilterDataTable DataTable="[out_dt_Utredning_OldRowsFromExcel]" DisplayName="Filter Data Table out_dt_Journalanteckningar_OldRowsFromExcel" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="FilterDataTable_5" OutputDataTable="[dt_Kvitterade]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Kvitteringsstatus"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["Kvitterat"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FilterDataTable>
      <Assign DisplayName="Assign out_OldRowsExists_Utredning" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[out_OldRowsExists_Utredning]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[If(dt_Kvitterade.RowCount &gt; 0, True, False)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
  </Sequence>
</Activity>